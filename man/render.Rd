% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/render.R
\name{render}
\alias{render}
\title{Render any csasdown document with bilingual features}
\usage{
render(yaml_fn = "_bookdown.yml", keep_files = FALSE, ...)
}
\arguments{
\item{yaml_fn}{The YAML file name. The default is '_bookdown.yml' for
\code{\link[bookdown:render_book]{bookdown::render_book()}}}

\item{keep_files}{If \code{TRUE}, keep the temporary files created (Rmd files and
YAML file)}

\item{...}{Additional arguments passed to \code{\link[bookdown:render_book]{bookdown::render_book()}} and
\code{\link[=validate_chunk_headers]{validate_chunk_headers()}}}
}
\value{
Nothing
}
\description{
Render a csasdown document with bilingual features. Renders a csasdown
document (autodetects resdoc, sr, techreport) using the
\code{\link[bookdown:render_book]{bookdown::render_book()}} method but includes a pre-processing step to
do several things:
\enumerate{
\item Inject 'index.Rmd' with special code to allow bilingual features to
be used
\item Convert anything inside \code{\link[=cat]{cat()}} calls to cat-like
strings instead of rmarkdown strings.
This means that any inline R code
included with backticks, eg: \code{`r Sys.time()`} will be replaced with
a quoted, comma separated string (see \code{\link[=catize]{catize()}}). This allows the \code{\link[=cat]{cat()}}
function inside a code chunk to contain backtick-quoted R expressions exactly
like what knitr processes inline.
}
}
\details{
This is a convenience function so users can place \code{\link[=cat]{cat()}} around
already-written rmarkdown code containing inline R code chunks, and
place those \code{\link[=cat]{cat()}} statements inside a large code chunk. It will be
invisible to users when using this function to render their document.

Temporary files for all the Rmd files and the YAML file which contains these
filenames (typically _bookdown.yml) are created with modified code chunks.
Anywhere in the Rmd files containing \code{\link[=cat]{cat()}} with knitr-style inline embedded
code chunks included are modified to make a string of text and R code together
which can be processed by core R. The official knitr regular expression is used
to extract these inline code chunks. The main Rmd file, typically index.Rmd
is not modified at all (it is not parsed).

Any single-backslash escaped things in rmarkdown such as \verb{$\\pi$}, or
\verb{$\\alpha$} or similar will be converted to double-backslashed inside
of the temporary Rmd files to avoid an error from the \code{\link[=cat]{cat()}} function.

You can use either single or double quotes to surround the text passed to \code{\link[=cat]{cat()}}
}
